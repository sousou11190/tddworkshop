

お題：バージョン番号を示すクラス/オブジェクトをつくりたい。

- [x]バージョンオブジェクトはmajor, minor, patch の3つによって表され、初期値は全て0である
 - [x]semver においてバージョンの各フィールドはの初期値はゼロである(追加)
 - [x]to_s()メソッドを呼び出すと"major.minor.patch"の文字列を返す。

- [x]バージョンオブジェクトはmajor, minor, patch の3つによって表され、set_versionメソッドで値を設定できる
 - [x]semver においてバージョンの各フィールドを3つの引数で指定できる
 - [x]semver においてバージョンの各フィールドはゼロ、または正の整数である。
 - []semver においてバージョンの各フィールドはゼロ、または正の整数以外は使えない。

- [x]バージョンアップできるn
 - [x]patch_version_up()を呼ぶとバージョンオブジェクトはパッチバージョンアップできる。
  - [x]patchフィールドがインクリメントされる
 - [x]バージョンオブジェクトはminor_version_up()を呼ぶとマイナーバージョンアップできる。
  - [x]minorフィールドがインクリメントされる
  - [x]patchフィールドが0になる
 - [x]バージョンオブジェクトはmajor_version_up()を呼ぶとメジャーバージョンアップできる。
  - [x]majorフィールドがインクリメントされる
  - [x]minorフィールドが0になる
  - [x]patchフィールドが0になる
 
- []バージョンオブジェクトは等価性比較や大小比較ができる。(compareメソッド)
 - []第1引数と第2引数で構成される
 - []第1引数の方が大きい場合、 1を返す
 - []第2引数の方が大きい場合、-1を返す
 - []2つの引数が等しい場合、0を返す
 - []プログラミング言語の等価性比較メソッドや大小比較メソッド、文字列表現メソッドなどのイディオムに従う

 - []compare_major()では、majorを比較できる
   - []majorが等しくない場合、majorの数字が大きい方を大とする。
   - []majorが等しいかつminorが異なる場合、minorの数字が大きい方を大とする。
   - []majorが等しいかつminorが等しいかつpatch異なる場合、patchの数字が大きい方を大とする。
   - []major, minor, patchの全てが等しい場合、等価とみなす
